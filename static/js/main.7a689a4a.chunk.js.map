{"version":3,"sources":["components/Nav/Nav.js","components/Header/Header.js","components/Footer/Footer.js","components/Search/SearchForm.js","data/CharData.js","components/ImageCard/ImageCard.js","components/ImageList/ImageList.js","pages/Home.js","image/profileImage.jpg","pages/About.js","components/ItemList/ItemList.js","components/CharacterDescription/CharacterDescription.js","pages/Character.js","pages/SearchPage.js","components/Routes.js","App.js","index.js"],"names":["Nav","props","to","Header","Footer","href","className","credit","SearchForm","handleChange","event","setState","value","target","handleSubmit","preventDefault","doSearch","e","history","push","state","match","params","text","bind","onSubmit","this","type","placeholder","onChange","disabled","length","React","Component","withRouter","CharData","id","name","description","thumbnail","comics","events","series","stories","wiki","ImageCard","title","val","desc","goToChar","item","pathname","alt","src","width","height","newDesc","slice","renderDescription","ImageList","list","path","map","element","index","Home","charData","attribution","limiter","offset","totalResults","loadAPI","a","connect","api","console","log","setData","componentDidMount","undefined","fullCall","key","alert","fetch","response","json","data","arr","results","count","total","forEach","c","extension","urls","url","attributionText","onClick","About","formInput","profile","profileImage","ItemList","CharacterDescription","character","method","Character","loadCharacter","location","items","charId","counter","renderLists","SearchPage","sendSearch","componentDidUpdate","previousProps","Routes","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a689a4a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.scss'\n/* JK: Basic Nav */\nconst Nav = props => {\n    return (\n        <nav>\n            <ul>\n                <li><NavLink to=\"/Home\">Home</NavLink></li>\n                <li><NavLink to=\"/About\">About</NavLink></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport './Header.scss'\nimport Nav from '../Nav/Nav';\n\n/* JK: Basic Header */\nconst Header = props => {\n    return (\n        <header>\n            <ul>\n                <li>\n                    <h1>Marvel Wiki</h1>\n                </li>\n                <li>\n                    <Nav />\n                </li>\n            </ul>\n        </header >\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { FaLinkedin } from 'react-icons/fa'\nimport { FaFacebookSquare } from 'react-icons/fa'\nimport { FaInstagram } from 'react-icons/fa'\nimport './Footer.scss'\n\n/* JK: Basic Footer with Social Media Links */\nconst Footer = props => {\n    return (\n        <footer>\n            <ul>\n                <li>\n                    <a href=\"https://www.linkedin.com/in/jjkneiss-aba/\"><FaLinkedin /></a>\n\n                </li>\n                <li>\n                    <a href=\"https://www.facebook.com/daevus.abaddon.1/\"><FaFacebookSquare /></a>\n\n                </li>\n                <li>\n                    <a href=\"https://www.instagram.com/jj_kneiss/\"><FaInstagram /></a>\n                </li>\n            </ul>\n            <a href=\"http://marvel.com\\\" className=\"attribute\"> {props.credit}</a>\n        </footer >\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { withRouter } from 'react-router-dom'\n// import { NavLink } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport './SearchForm.scss';\n\n/* JK: Search form to make character calls to the Marvel API */\nclass SearchForm extends React.Component {\n    // Create Controlled Component\n    constructor(props) {\n        // Set state & bind data\n        super(props);\n\n        // SB: By pre-populating our \"value\" from the url, we are guaranteeing the text box will reflect the current search.\n        this.state = { value: this.props.match.params.text || '' };\n\n        // Bind to this\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (event) => {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    doSearch = (e) => {\n        // SB: Keeps the form from trying to submit to itself.\n        e.preventDefault();\n        // SB: Navigates to a new page. \n        this.props.history.push('/Search/' + this.state.value);\n    }\n\n    render() {\n        // let query = this.props.data;\n        return (\n            // SB: Button and enter key both trigger the same function via the form's onSubmit.\n            <form onSubmit={this.doSearch}>\n                <input type=\"text\" value={this.state.value} placeholder=\"Search\" onChange={this.handleChange} />\n                <button disabled={!(this.state.value && this.state.value.length > 0)}>\n                    <FaSearch />\n                </button>\n            </form>\n\n        );\n    }\n}\n// SB: withRouter allows us to access react-router features such as the history.\nexport default withRouter(SearchForm);","// Data Transfer Object\nclass CharData {\n    id = \"\";\n    name = \"\";\n    description = \"\";\n    thumbnail = \"\";\n    comics = \"\";\n    events = \"\";\n    series = \"\";\n    stories = \"\";\n    wiki = \"\";\n}\nexport default CharData;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './ImageCard.scss'\n\n/* JK: Image Card involving title, image, & description */\nconst ImageCard = props => {\n    // Create Variables for Card Info\n    let title = props.val.name;\n    let id = props.val.id;\n    let desc = (props.val.description || \"No Description Available\");\n    let thumbnail = props.val.thumbnail;\n\n    /* JK: Render description according to availability*/\n    let renderDescription = () => {\n        if (desc === \"No Description Available\" || desc === \"\") {\n            return (<p className=\"unavailable\">{\"No Description Available\"}</p>)\n        }\n        else {\n            let newDesc = desc.slice(\" \", 240);\n            newDesc += \"...\"\n            return (<p>{newDesc}</p>)\n        }\n    }\n    /* JK: Create navlink with parameter */\n    let goToChar = (item) => (< NavLink to={{\n        pathname: \"/Character/\" + id,\n        state: props.val\n    }}>{item}</NavLink>)\n    return (\n        <article className=\"item-card\" key={props.id}>\n            <h3>{goToChar(title)}</h3>\n            {goToChar(<img alt={title} src={thumbnail} width={props.width} height={props.height} />)}\n            <div className=\"description\">\n                {/* Set render conditional */}\n                {renderDescription()}\n                {/* {Navigate to page using character } */}\n                {goToChar(\"Details\")}\n            </div>\n        </article >\n    );\n}\n\nexport default ImageCard;","import React from 'react';\nimport ImageCard from '../ImageCard/ImageCard';\nimport './ImageList.scss';\n\n/* JK: Create Image List using list of Image Card components */\nconst ImageList = props => {\n    let list = props.path.map((element, index) => {\n        return (<ImageCard key={element.id} val={element} height=\"150px\" width=\"150px\" />);\n    })\n    return (\n        // < section className=\"characters\" >\n        <section className=\"characters\">\n            {list}\n        </section>\n    );\n}\n\nexport default ImageList;","import React, { Component } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport SearchForm from '../components/Search/SearchForm';\n\nimport CharData from '../data/CharData';\nimport ImageList from '../components/ImageList/ImageList';\n\n/* JK: This page loads Characters alphabetically from the Marvel API */\nclass Home extends Component {\n\n    state = {\n        charData: [],\n        attribution: [],\n        limiter: 8,\n        offset: 0,\n        totalResults: 0\n    }\n\n    loadAPI = async () => {\n        // Create API call\n        const api = \"https://gateway.marvel.com/v1/public/characters?&apikey=\";\n        let auth = \"9fc3988f672586da032a847df46e7861\";\n        let connect = api + auth;\n        connect += '&limit=' + this.state.limiter;\n        connect += '&offset=' + this.state.offset;\n        console.log('api url', connect)\n        this.setData(connect);\n    };\n    sendSearch(item) {\n        if (item !== undefined && item !== \"\") {\n            (async () => {\n                const api = \"https://gateway.marvel.com/v1/public/characters?nameStartsWith=\";\n                let name = item;\n                let fullCall = api + name\n                fullCall += '&limit=' + this.state.limiter;\n                fullCall += '&offset=' + this.state.offset;\n                const key = \"&apikey=\";\n                let auth = \"9fc3988f672586da032a847df46e7861\";\n                let fullAuth = key + auth;\n                let connect = fullCall + fullAuth;\n                this.setData(connect);\n            })();\n        }\n        else {\n            alert(\"Search bar empty.\");\n        }\n    }\n    async setData(connect) {\n        try {\n            const response = await fetch(connect);\n            const data = await response.json();\n            let arr = this.state.charData || [];\n            if (data.data.results.length === 0) {\n                alert(\"No results. Please check your spelling\");\n            }\n            else {\n                console.log(connect);\n                console.log(\"api response\", data.data);\n                // Pass data to new Character Object\n                this.setState({ offset: data.data.offset + data.data.count, totalResults: data.data.total })\n                console.log(\"data\", this.state.charData);\n                console.log(\"limiter\", this.state.limiter);\n                console.log(\"offset\", this.state.offset);\n                console.log(\"totalResults\", this.state.totalResults);\n                data.data.results.forEach(element => {\n                    let c = new CharData();\n                    c.id = element.id;\n                    c.name = element.name;\n                    c.description = element.description;\n                    c.thumbnail = element.thumbnail.path + \".\" + element.thumbnail.extension;\n                    c.comics = element.comics;\n                    c.events = element.events;\n                    c.series = element.series;\n                    c.stories = element.stories;\n                    c.wiki = element.urls[0].url;\n                    arr.push(c);\n                });\n                // Set state using Character Object\n                this.setState({ charData: arr })\n                this.setState({ attribution: data.attributionText })\n                console.log(arr)\n            }\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n    componentDidMount = () => this.loadAPI();\n    render() {\n        // let limiter = 4;\n        return (\n            <div className=\"App\">\n                <Header />\n                <SearchForm />\n                <ImageList path={this.state.charData} className=\"characters\" />\n                <button className=\"load-more\" onClick={this.loadAPI}>Load More</button>\n                <p>Showing {this.state.charData.length} of {this.state.totalResults} results.</p>\n                <Footer credit={this.state.attribution} />\n            </div >\n        );\n    }\n}\nexport default Home;","export default __webpack_public_path__ + \"static/media/profileImage.60151e97.jpg\";","import React, { Component } from 'react';\nimport Header from '../components/Header/Header';\nimport ImageCard from '../components/ImageCard/ImageCard';\nimport profileImage from '../image/profileImage.jpg';\n\n/* JK: This page displays a minor profile for the site developers */\nclass About extends Component {\n    state = {\n        formInput: [{\n        }],\n        profile: [{\n            name: \"Jamie Kneiss\",\n            thumbnail: profileImage,\n            description: \"Jamie is an aspiring web developer doing his best to bring the spirit of each project to life.\"\n        }]\n    }\n    render() {\n        // Map image cards using passed state\n        let profile = this.state.profile.map((element, index) => {\n            return <ImageCard key={index} val={element} height=\"100px\" width=\"100px\" />\n        });\n        return (\n            <div className=\"App\">\n                <Header />\n                <section>\n                    <div className=\"profile\">\n                        <h2>{this.state.profile.name}</h2>\n                        <img alt={profile} src={profileImage} height=\"300px\" width=\"300px\" />\n                        <p>{this.state.profile.description}</p>\n                    </div>\n                    <div className=\"project\">\n                        <h2>Project: Marvel Wiki</h2>\n                        <p>While just a basic wiki application using the Marvel API, this React based application has taught Jamie a lot about the React framework, maintaining project scope, and simply thinking along the lines that a developer should. </p>\n                    </div>\n                </section>\n            </div >\n        );\n    }\n}\nexport default About;","import React from 'react';\nimport './ItemList.scss'\n\n/* JK: Create List of <li> tags using passed data */\nconst ItemList = props => {\n    /* Render Items according to availability */\n    let renderItems = () => {\n        if (props.path.length === 0) {\n            return <p className=\"unavailable\">Not Available</p>\n        }\n        else {\n            return (props.path.map((element, index) => {\n                return <li key={index}>{element.name}</li>\n            }))\n        }\n    }\n    return (\n        <article >\n            <h2>{props.title}</h2>\n            <ul>\n                {renderItems()}\n            </ul>\n        </article>\n    );\n}\n\nexport default ItemList;","import React from 'react';\nimport './CharacterDescription.scss';\nconst CharacterDescription = props => {\n    return (\n        <section className=\"individual\">\n            <h2>{props.character.name}</h2>\n            <img alt={props.character.name} src={props.character.thumbnail} height=\"300px\" width=\"300px\" />\n            {/* <a href=>Visit on Marvel Wiki</a> */}\n            {props.method}\n            <a href={props.character.wiki}>Go to Official Marvel Wiki</a>\n\n        </section >\n    );\n}\n\nexport default CharacterDescription;\n\n\n","import React, { Component } from 'react';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header/Header';\nimport ItemList from '../components/ItemList/ItemList';\nimport CharacterDescription from '../components/CharacterDescription/CharacterDescription';\nimport CharData from '../data/CharData';\n\n/* JK: This page loads a specific character from the searched lists */\nclass Character extends Component {\n    state = {\n        character: {\n            id: \"\",\n            name: \"\",\n            description: \"\",\n            thumbnail: \"\",\n            comics: [],\n            series: [],\n            stories: [],\n            events: [],\n            wiki: \"\"\n        }\n    }\n    /* JK: Load Character data from search */\n    loadCharacter = () => {\n        /* JK: Abbreviate state variable & create new Character Object */\n        let state = this.props.location.state;\n        let c = new CharData();\n\n        /* JK: Load API if state empty */\n        if (state === undefined) {\n            this.loadAPI();\n        }\n        /* JK: Otherwise use props to fill data */\n        else {\n            c.id = state.id\n\n            c.name = state.name;\n            c.description = state.description;\n            c.thumbnail = state.thumbnail;\n\n            c.comics = state.comics.items;\n            c.series = state.series.items;\n            c.stories = state.stories.items;\n            c.events = state.events.items;\n\n            c.wiki = state.wiki;\n        }\n        this.setState({ character: c })\n    }\n    /* JK: Load API call during empty state */\n    loadAPI = async () => {\n        // Set id to passed prop params\n        let charId = this.props.match.params.text;\n\n        // Make API Call\n        const api = \"https://gateway.marvel.com/v1/public/characters/\";\n        let request = charId + \"?apikey=\";\n        let auth = \"9fc3988f672586da032a847df46e7861\";\n        let connect = api + request + auth;\n        try {\n            const response = await fetch(connect);\n            const data = await response.json();\n            let character = data.data.results[0];\n            // Use Character Object to pass data to state\n            let c = new CharData();\n            c.id = character.id\n            c.name = character.name;\n            c.description = character.description;\n            c.thumbnail = character.thumbnail.path + \".\" + character.thumbnail.extension;\n            c.comics = character.comics.items;\n            c.series = character.series.items;\n            c.stories = character.stories.items;\n            c.events = character.events.items;\n            c.wiki = character.wiki;\n            this.setState({ character: c })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    };\n\n    /* JK: Render description as unavailable if no text is in desc */\n    renderDescription(desc) {\n        if (desc === \"\") {\n            return (<p className=\"unavailable\">{\"No Description Available\"}</p>)\n        }\n        else {\n            return (<p>{desc}</p>)\n        }\n    }\n\n    /* JK: Render character details according to availability  */\n    renderLists(character) {\n        console.log(character.comics.length);\n        let arr = [character.comics, character.series, character.events, character.stories];\n        console.log(arr);\n        let counter = character.comics.length + character.series.length + character.events.length + character.stories.length;\n        arr.forEach(element => {\n            counter += element.length;\n        })\n        console.log(counter);\n        if (counter === 0) {\n            return (<p>whoops</p>)\n        } else {\n            return (<section className=\"characters\" >\n                {/* Pass list title & state path */}\n                <ItemList title={\"Comics\"} path={character.comics} />\n                <ItemList title={\"Series\"} path={character.series} />\n                <ItemList title={\"Events\"} path={character.events} />\n                <ItemList title={\"Stories\"} path={character.stories} />\n            </section >)\n        }\n    }\n\n    componentDidMount = () => this.loadCharacter();\n\n    /* JK: Abbreviate state & set render logic */\n    render() {\n        let character = this.state.character;\n        return (\n            <div className=\"App\" >\n                <Header />\n                <CharacterDescription character={character} method={this.renderDescription(character.description)} />\n                {this.renderLists(character)}\n                <Footer credit={this.state.attribution} />\n            </div >\n        );\n    }\n}\nexport default Character;","import React, { Component } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport SearchForm from '../components/Search/SearchForm';\n\nimport CharData from '../data/CharData';\nimport ImageList from '../components/ImageList/ImageList';\n\n/* JK: This page sends user input search parameters and returns the desired characters */\nclass SearchPage extends Component {\n    state = {\n        charData: [],\n        attribution: [],\n        limiter: 8,\n        offset: 0,\n        totalResults: 0\n    }\n\n    /* JK: On Button Click, load API again with search input */\n    loadAPI = async () => this.sendSearch(this.props.match.params.text);\n\n    /* JK: Accept search input & method source for context, then send to final API call */\n    sendSearch(item, src) {\n        if (item !== undefined && item !== \"\") {\n            (async () => {\n                const api = \"https://gateway.marvel.com/v1/public/characters?nameStartsWith=\";\n                let name = item;\n                let fullCall = api + name\n\n                fullCall += '&limit=' + this.state.limiter;\n                if (src === \"search\") {\n                    this.setState({ offset: 0 });\n                    fullCall += '&offset=' + 0;\n                }\n                else {\n                    fullCall += '&offset=' + this.state.offset;\n                }\n                const key = \"&apikey=\";\n                let auth = \"9fc3988f672586da032a847df46e7861\";\n                let fullAuth = key + auth;\n                let connect = fullCall + fullAuth;\n                this.setData(connect);\n            })();\n        }\n        else {\n            alert(\"Search bar empty.\");\n        }\n    }\n\n    /* JK: Using search parameters,\n    accept API data using transfer object and populate state with details */\n    async setData(connect) {\n        try {\n            const response = await fetch(connect);\n            const data = await response.json();\n            let arr = this.state.charData || [];\n            let credit = data.attributionText;\n            if (data.data.results.length === 0) {\n                alert(\"No results. Please check your spelling\");\n            }\n            else {\n                console.log(\"api response\", data.data);\n\n                /* JK: Pass api data to new Character */\n                data.data.results.forEach(element => {\n                    let c = new CharData();\n                    c.id = element.id;\n                    c.name = element.name;\n                    c.description = element.description;\n                    c.thumbnail = element.thumbnail.path + \".\" + element.thumbnail.extension;\n                    c.comics = element.comics;\n                    c.events = element.events;\n                    c.series = element.series;\n                    c.stories = element.stories;\n                    c.wiki = element.urls[1].url;\n                    arr.push(c);\n                });\n                this.setState({\n                    charData: arr,\n                    attribution: credit,\n                    offset: data.data.offset + data.data.count,\n                    totalResults: data.data.total\n                });\n                console.log(arr);\n            }\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    // SB: Runs any time the component is about to be displayed, so we grab the url variable and trigger our search.\n    componentDidMount = () => this.sendSearch(this.props.match.params.text, \"search\");\n\n    // SB: Runs if the component is already mounted, but something in props or state changes.\n    componentDidUpdate = (previousProps) => {\n\n        // SB: Because the component updates frequently, we have to make sure we're only loading\n        //      new data when the url has been changed.\n        if (previousProps.match.params.text !== this.props.match.params.text) {\n            // SB Note: In here would be a reasonable place to nuke the charData array, since it only runs when the\n            //          search has changed and not necessarily when you \"show more\"\n            this.setState({ charData: [], offset: 0, totalResults: 0 });\n            this.sendSearch(this.props.match.params.text, \"search\");\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                {/* SB: No longer need to pass unnecessary data or functions to Search. */}\n                <SearchForm />\n                <ImageList path={this.state.charData} className=\"characters\" />\n                {/* JK: On button click, clear state & create new API call with user input */}\n                <button disabled={(this.state.charData.length === this.state.totalResults)} className=\"load-more\" onClick={this.loadAPI}>Load More</button>\n                {/* JK: Display the current set of results out of total results */}\n                <p>Showing {this.state.charData.length} of {this.state.totalResults} results.</p>\n                <Footer credit={this.state.attribution} />\n            </div >\n        );\n    }\n}\nexport default SearchPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport About from '../pages/About';\nimport Character from '../pages/Character';\nimport SearchPage from '../pages/SearchPage';\n\nconst Routes = () => {\n    return (\n        <section>\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/Home' component={Home} />\n                <Route path='/About' component={About} />\n                {/* Create page w/dynamic routing */}\n                <Route path='/Character/:text' component={Character} />\n                <Route path='/Search/:text' component={SearchPage} />\n            </Switch>\n        </section>\n    );\n}\n\nexport default Routes;","import './scss/App.scss';\nimport Routes from './components/Routes.js'\nimport { HashRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\n// import reportWebVitals from './test/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}